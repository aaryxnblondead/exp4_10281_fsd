{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABC\\\\Documents\\\\GitHub\\\\exp4_10281_fsd\\\\task\\\\src\\\\components\\\\TaskBoard\\\\TaskBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext } from '@hello-pangea/dnd';\nimport Column from '../Column/Column';\nimport AddTaskModal from '../AddTaskModal/AddTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = {\n  todo: {\n    id: 'todo',\n    title: 'To Do',\n    taskIds: []\n  },\n  inProgress: {\n    id: 'inProgress',\n    title: 'In Progress',\n    taskIds: []\n  },\n  completed: {\n    id: 'completed',\n    title: 'Completed',\n    taskIds: []\n  }\n};\nconst TaskBoard = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const [tasks, setTasks] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const startColumn = columns[source.droppableId];\n    const endColumn = columns[destination.droppableId];\n    const newStartTaskIds = Array.from(startColumn.taskIds);\n    newStartTaskIds.splice(source.index, 1);\n    const newEndTaskIds = Array.from(endColumn.taskIds);\n    newEndTaskIds.splice(destination.index, 0, draggableId);\n    setColumns({\n      ...columns,\n      [startColumn.id]: {\n        ...startColumn,\n        taskIds: newStartTaskIds\n      },\n      [endColumn.id]: {\n        ...endColumn,\n        taskIds: newEndTaskIds\n      }\n    });\n  };\n  const addTask = newTask => {\n    const taskId = `task-${Date.now()}`;\n    setTasks({\n      ...tasks,\n      [taskId]: {\n        id: taskId,\n        ...newTask\n      }\n    });\n    setColumns({\n      ...columns,\n      todo: {\n        ...columns.todo,\n        taskIds: [...columns.todo.taskIds, taskId]\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: \"Task Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n        children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(Column, {\n          column: column,\n          tasks: tasks,\n          onDeleteTask: taskId => {\n            const newTasks = {\n              ...tasks\n            };\n            delete newTasks[taskId];\n            setTasks(newTasks);\n            const newColumns = {\n              ...columns\n            };\n            newColumns[column.id].taskIds = column.taskIds.filter(id => id !== taskId);\n            setColumns(newColumns);\n          }\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBoard, \"NXhJ8vuJjEdYNYCz2wHZrMQiro4=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useState","DragDropContext","Column","AddTaskModal","jsxDEV","_jsxDEV","initialColumns","todo","id","title","taskIds","inProgress","completed","TaskBoard","_s","columns","setColumns","tasks","setTasks","isModalOpen","setIsModalOpen","handleDragEnd","result","destination","source","draggableId","droppableId","index","startColumn","endColumn","newStartTaskIds","Array","from","splice","newEndTaskIds","addTask","newTask","taskId","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragEnd","Object","values","map","column","onDeleteTask","newTasks","newColumns","filter","isOpen","onClose","onAddTask","_c","$RefreshReg$"],"sources":["C:/Users/ABC/Documents/GitHub/exp4_10281_fsd/task/src/components/TaskBoard/TaskBoard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext } from '@hello-pangea/dnd';\r\nimport Column from '../Column/Column';\r\nimport AddTaskModal from '../AddTaskModal/AddTaskModal';\r\n\r\nconst initialColumns = {\r\n  todo: {\r\n    id: 'todo',\r\n    title: 'To Do',\r\n    taskIds: []\r\n  },\r\n  inProgress: {\r\n    id: 'inProgress',\r\n    title: 'In Progress',\r\n    taskIds: []\r\n  },\r\n  completed: {\r\n    id: 'completed',\r\n    title: 'Completed',\r\n    taskIds: []\r\n  }\r\n};\r\n\r\nconst TaskBoard = () => {\r\n  const [columns, setColumns] = useState(initialColumns);\r\n  const [tasks, setTasks] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const startColumn = columns[source.droppableId];\r\n    const endColumn = columns[destination.droppableId];\r\n\r\n    const newStartTaskIds = Array.from(startColumn.taskIds);\r\n    newStartTaskIds.splice(source.index, 1);\r\n\r\n    const newEndTaskIds = Array.from(endColumn.taskIds);\r\n    newEndTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [startColumn.id]: {\r\n        ...startColumn,\r\n        taskIds: newStartTaskIds\r\n      },\r\n      [endColumn.id]: {\r\n        ...endColumn,\r\n        taskIds: newEndTaskIds\r\n      }\r\n    });\r\n  };\r\n\r\n  const addTask = (newTask) => {\r\n    const taskId = `task-${Date.now()}`;\r\n    setTasks({\r\n      ...tasks,\r\n      [taskId]: { id: taskId, ...newTask }\r\n    });\r\n    setColumns({\r\n      ...columns,\r\n      todo: {\r\n        ...columns.todo,\r\n        taskIds: [...columns.todo.taskIds, taskId]\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-8\">\r\n      <div className=\"mb-8 flex justify-between items-center\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800\">Task Board</h1>\r\n        <button\r\n          onClick={() => setIsModalOpen(true)}\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors\"\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n      \r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          {Object.values(columns).map((column) => (\r\n            <Column\r\n              key={column.id}\r\n              column={column}\r\n              tasks={tasks}\r\n              onDeleteTask={(taskId) => {\r\n                const newTasks = { ...tasks };\r\n                delete newTasks[taskId];\r\n                setTasks(newTasks);\r\n                \r\n                const newColumns = { ...columns };\r\n                newColumns[column.id].taskIds = column.taskIds.filter(\r\n                  (id) => id !== taskId\r\n                );\r\n                setColumns(newColumns);\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </DragDropContext>\r\n\r\n      <AddTaskModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onAddTask={addTask}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}